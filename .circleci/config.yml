# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  sam: circleci/aws-serverless@1.0.1

parameters:
  action:
    type: enum
    enum: [build, deploy]
    default: build
  service:
    type: string
    default: "weather"

commands:
  install-bazel:
    steps:
      - run:
          name: Instal bazel
          command: |-
            sudo apt install curl gnupg
            curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
            sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
            sudo apt update && sudo apt install bazel
  build-service:
    steps:
      - run:
          name: Build << pipeline.parameters.service >> service
          # TODO: down grade the parameter scope at command level
          command: bazel build src/main/java/com/<< pipeline.parameters.service >>:<< pipeline.parameters.service >>_deploy.jar
  deploy-service:
    steps:
      - sam/install
      - run: sam deploy --s3-bucket << pipeline.parameters.service >>-service-deploy --stack-name api-stack --capabilities CAPABILITY_IAM --template-file src/main/java/com/<< pipeline.parameters.service >>/template.yaml

jobs:
  build:
    machine: true
    steps:
      - install-bazel
      - checkout
      - run:
          name: Build service
          command: |-
            echo "build weather service"
            bazel build src/main/java/com/weather:weather_deploy.jar
  deploy:
    machine: true
    steps:
      - install-bazel
      - checkout
      - build-service
      - deploy-service

workflows:
  build:
    when:
      equal: [ build, << pipeline.parameters.action >> ]
    jobs:
      - build

  deploy:
    when:
      equal: [ deploy, << pipeline.parameters.action >> ]
    jobs:
      - deploy
